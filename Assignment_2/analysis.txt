Nicholas Feanny; naf16b; proj2.x

reverse() Big-O analysis:
	reverse shows linear growth. As such it is of O(n) due to
	the for loop embedded inside the reverse function which acts
	as the predominant player in how this algorithm behaves in relation
	to performance.The loop iterates through the list and reverses the 
	direction of next and previous of each node until the end.

remove_if() Big-O analysis:
	remove_if also shows linear growth behavior. Again, like before it is
	of O(n) due to the for loop which acts as the main driving force behind 
	behavior of the function as the for loop iterates from node to node 
	and if the condition within the loop is satisfied then a node is removed.
	
